#!/usr/bin/env ruby
# encoding: UTF-8

require 'yaml'
require "echinoidea"
require 'optparse'
opt = OptionParser.new

OPTS = {}
opt.on('-d') {|v| OPTS[:d] = v}
opt.on('-l') {|v| OPTS[:l] = v}
opt.on('-o VAL') {|v| OPTS[:o] = v }
opt.on('-t VAL') {|v| OPTS[:t] = v }
opt.on('-u VAL') {|v| OPTS[:u] = v }
opt.on('--development-mode') {|v| OPTS[:development_mode] = v}
opt.parse!(ARGV)

if OPTS[:o] == nil || OPTS[:o] == ""
  STDERR.puts "Specify output directory with option -o. echinoidea -o output_directory"
  exit
end

if OPTS[:l]
  puts "Options: " + OPTS.to_s
end

current_dir = Dir::pwd

if !Echinoidea::project_root_directory?(current_dir)
  STDERR.puts "#{Dir::pwd} is not root directory of a unity project."
  exit false
end
if !Echinoidea::config_exists?(current_dir)
  STDERR.puts "No echinoidea.yml exists in #{Dir::pwd}"
  exit false
end

if !Echinoidea::editor_directory_exists?(current_dir)
  puts "No Editor directory. Create Editor directory."
  Echinoidea::create_editor_directory(current_dir)
end

# load config
config = YAML.load_file([current_dir, "echinoidea.yml"].join("/"))

builder = Echinoidea::Builder.new(current_dir, config, OPTS[:l], OPTS[:u])
builder.output_directory = OPTS[:o]
builder.build_target = OPTS[:t] if OPTS[:t]
builder.development_mode = OPTS[:development_mode] if OPTS[:development_mode]
builder.debug_mode = true if OPTS[:d]

builder.run
